//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.11.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using Doc2PdfApi.HelperClasses;
using Doc2PdfApi.FactoryClasses;
using Doc2PdfApi.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace Doc2PdfApi.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'JsonDataSample'.<br/><br/></summary>
	[Serializable]
	public partial class JsonDataSampleEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static JsonDataSampleEntityStaticMetaData _staticMetaData = new JsonDataSampleEntityStaticMetaData();
		private static JsonDataSampleRelations _relationsFactory = new JsonDataSampleRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class JsonDataSampleEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public JsonDataSampleEntityStaticMetaData()
			{
				SetEntityCoreInfo("JsonDataSampleEntity", InheritanceHierarchyType.None, false, (int)Doc2PdfApi.EntityType.JsonDataSampleEntity, typeof(JsonDataSampleEntity), typeof(JsonDataSampleEntityFactory), false);
			}
		}

		/// <summary>Static ctor</summary>
		static JsonDataSampleEntity()
		{
		}

		/// <summary> CTor</summary>
		public JsonDataSampleEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public JsonDataSampleEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this JsonDataSampleEntity</param>
		public JsonDataSampleEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for JsonDataSample which data should be fetched into this JsonDataSample object</param>
		public JsonDataSampleEntity(System.String id) : this(id, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for JsonDataSample which data should be fetched into this JsonDataSample object</param>
		/// <param name="validator">The custom validator object for this JsonDataSampleEntity</param>
		public JsonDataSampleEntity(System.String id, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.Id = id;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected JsonDataSampleEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this JsonDataSampleEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static JsonDataSampleRelations Relations { get { return _relationsFactory; } }

		/// <summary>The CreateBy property of the Entity JsonDataSample<br/><br/></summary>
		/// <remarks>Mapped on  table field: "JSON_DATA_SAMPLE"."createBy".<br/>Table field type characteristics (type, precision, scale, length): VarChar, 0, 0, 30.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String CreateBy
		{
			get { return (System.String)GetValue((int)JsonDataSampleFieldIndex.CreateBy, true); }
			set { SetValue((int)JsonDataSampleFieldIndex.CreateBy, value); }
		}

		/// <summary>The CreateDate property of the Entity JsonDataSample<br/><br/></summary>
		/// <remarks>Mapped on  table field: "JSON_DATA_SAMPLE"."createDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.DateTime> CreateDate
		{
			get { return (Nullable<System.DateTime>)GetValue((int)JsonDataSampleFieldIndex.CreateDate, false); }
			set { SetValue((int)JsonDataSampleFieldIndex.CreateDate, value); }
		}

		/// <summary>The FileName property of the Entity JsonDataSample<br/><br/></summary>
		/// <remarks>Mapped on  table field: "JSON_DATA_SAMPLE"."FileName".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String FileName
		{
			get { return (System.String)GetValue((int)JsonDataSampleFieldIndex.FileName, true); }
			set { SetValue((int)JsonDataSampleFieldIndex.FileName, value); }
		}

		/// <summary>The FilePath property of the Entity JsonDataSample<br/><br/></summary>
		/// <remarks>Mapped on  table field: "JSON_DATA_SAMPLE"."FilePath".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String FilePath
		{
			get { return (System.String)GetValue((int)JsonDataSampleFieldIndex.FilePath, true); }
			set { SetValue((int)JsonDataSampleFieldIndex.FilePath, value); }
		}

		/// <summary>The Id property of the Entity JsonDataSample<br/><br/></summary>
		/// <remarks>Mapped on  table field: "JSON_DATA_SAMPLE"."Id".<br/>Table field type characteristics (type, precision, scale, length): VarChar, 0, 0, 40.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		public virtual System.String Id
		{
			get { return (System.String)GetValue((int)JsonDataSampleFieldIndex.Id, true); }
			set { SetValue((int)JsonDataSampleFieldIndex.Id, value); }
		}

		/// <summary>The JsonData property of the Entity JsonDataSample<br/><br/></summary>
		/// <remarks>Mapped on  table field: "JSON_DATA_SAMPLE"."jsonData".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String JsonData
		{
			get { return (System.String)GetValue((int)JsonDataSampleFieldIndex.JsonData, true); }
			set { SetValue((int)JsonDataSampleFieldIndex.JsonData, value); }
		}

		/// <summary>The UpdateBy property of the Entity JsonDataSample<br/><br/></summary>
		/// <remarks>Mapped on  table field: "JSON_DATA_SAMPLE"."updateBy".<br/>Table field type characteristics (type, precision, scale, length): VarChar, 0, 0, 30.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String UpdateBy
		{
			get { return (System.String)GetValue((int)JsonDataSampleFieldIndex.UpdateBy, true); }
			set { SetValue((int)JsonDataSampleFieldIndex.UpdateBy, value); }
		}

		/// <summary>The UpdateDate property of the Entity JsonDataSample<br/><br/></summary>
		/// <remarks>Mapped on  table field: "JSON_DATA_SAMPLE"."updateDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.DateTime> UpdateDate
		{
			get { return (Nullable<System.DateTime>)GetValue((int)JsonDataSampleFieldIndex.UpdateDate, false); }
			set { SetValue((int)JsonDataSampleFieldIndex.UpdateDate, value); }
		}

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace Doc2PdfApi
{
	public enum JsonDataSampleFieldIndex
	{
		///<summary>CreateBy. </summary>
		CreateBy,
		///<summary>CreateDate. </summary>
		CreateDate,
		///<summary>FileName. </summary>
		FileName,
		///<summary>FilePath. </summary>
		FilePath,
		///<summary>Id. </summary>
		Id,
		///<summary>JsonData. </summary>
		JsonData,
		///<summary>UpdateBy. </summary>
		UpdateBy,
		///<summary>UpdateDate. </summary>
		UpdateDate,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace Doc2PdfApi.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: JsonDataSample. </summary>
	public partial class JsonDataSampleRelations: RelationFactory
	{

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticJsonDataSampleRelations
	{

		/// <summary>CTor</summary>
		static StaticJsonDataSampleRelations() { }
	}
}
